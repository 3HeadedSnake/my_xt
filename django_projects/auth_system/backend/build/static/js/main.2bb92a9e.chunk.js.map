{"version":3,"sources":["containers/Home.js","actions/types.js","actions/auth.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["home","className","to","role","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AUTHENTICATED_FAIL","AUTHENTICATED_SUCCESS","USER_LOADED_SUCCESS","USER_LOADED_FAIL","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","classname","placeholder","required","minLength","Signup","Activate","ResetPassword","ResetPasswordConfirmed","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logout","authLinks","onClick","href","guestLinks","exact","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","checkAuthenticated","window","token","code","props","useEffect","fetchData","Navbar","children","App","path","component","Home","Login","ResetPasswordConfirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bb92a9e.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst home = () => (\n    <div className='container'>\n        <div className=\"jumbotron mt-5\">\n            <h1 className=\"display-4\">Welcome to Auth System!</h1>\n            <p className=\"lead\">This is a simple authentication system with all kinds of functionalities.</p>\n            <hr className=\"my-4\" />\n            <p>Go ahead and login!</p>\n            <Link className=\"btn btn-primary btn-lg\" to='/login' role=\"button\">Login</Link>\n        </div>\n    </div>\n);\n\nexport default home;\n","export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\nexport const RESET_PASSWORD_CONFIRM_SUCCESS = 'RESET_PASSWORD_CONFIRM_SUCCESS';\nexport const RESET_PASSWORD_CONFIRM_FAIL = 'RESET_PASSWORD_CONFIRM_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n","import axios from 'axios';\nimport {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    RESET_PASSWORD_SUCCESS,\n    RESET_PASSWORD_FAIL,\n    RESET_PASSWORD_CONFIRM_SUCCESS,\n    RESET_PASSWORD_CONFIRM_FAIL,\n    LOGOUT,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_FAIL,\n    AUTHENTICATED_SUCCESS\n} from './types';\n\nexport const checkAuthenticated = () => async dispatch => {\n    if (typeof window == 'undefined') {\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        });\n    }\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        };\n    \n        const body = JSON.stringify({ token: localStorage.getItem('access') });\n    \n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\n    \n            if (res.data.code !== 'token_not_valid') {\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                });\n            }\n        } catch (err) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        });\n    }\n};\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n\n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n};\n\nexport const signup = ({ name, email, password, re_password }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, password, re_password }); \n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: SIGNUP_FAIL\n        });\n    }\n};\n\nexport const verify = (uid, token) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ uid, token }); \n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\n\n        dispatch({\n            type: ACTIVATION_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        });\n    }\n};\n\nexport const reset_password = (email) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ email }); \n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\n\n        dispatch({\n            type: RESET_PASSWORD_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: RESET_PASSWORD_FAIL\n        });\n    }\n};\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password }); \n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\n\n        dispatch({\n            type: RESET_PASSWORD_CONFIRM_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: RESET_PASSWORD_CONFIRM_FAIL\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    dispatch({ type: LOGOUT });\n};\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\n\nconst  Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n    });\n\n    \n    const { email, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(email, password);\n    };\n\n    if(isAuthenticated)\n        return <Redirect to = '/' />;\n\n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign In</h1>\n            <p>Sign into your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n               <div className='form-group'>\n                   <input\n                        classname='form-control'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Login</button>\n            </form>\n            <p className='mt-3'>\n            Don't have an account? <Link to='/signup'>Sign Up</Link>\n            </p>\n            <p className='mt-3'>\n            Forgot your Password? <Link to='/reset_password'>Reset Password</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from 'react';\n\nconst  Signup = () => (\n    <div>\n        Login\n    </div>\n);\n export default Signup;","import React from 'react';\n\nconst  Activate = () => (\n    <div>\n        Login\n    </div>\n);\n export default Activate;","import React from 'react';\n\nconst  ResetPassword = () => (\n    <div>\n        Login\n    </div>\n);\n export default ResetPassword;","import React from 'react';\n\nconst  ResetPasswordConfirmed = () => (\n    <div>\n        Login\n    </div>\n);\n export default ResetPasswordConfirmed;","import {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    AUTHENTICATED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL\n} from '../actions/types';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case SIGNUP_FAIL:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React, { Fragment } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\n\nconst navbar = ({ isAuthenticated, logout }) => {\n    const authLinks = (\n        <li className=\"nav-item\">\n            <a className='nav-link' onClick={logout} href='#!'>Logout</a>\n        </li>\n    );\n\n    const guestLinks = (\n        <Fragment>\n            <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to='/login'>Login</NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to='/signup'>Sign Up</NavLink>\n            </li>\n        </Fragment>\n    );\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to='/'>Auth System</Link>\n            <button \n                className=\"navbar-toggler\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#navbarNav\"\n                aria-controls=\"navbarNav\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n            >\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" exact to='/'>Home</NavLink>\n                    </li>\n                    { <Fragment>{ isAuthenticated ? authLinks : guestLinks }</Fragment> }\n                </ul>\n            </div>\n        </nav>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { logout })(navbar);\n","import React, { useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user } from '../actions/auth';\n\nconst Layout = (props) => {\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                await props.checkAuthenticated();\n                await props.load_user();\n            } catch (err) {\n            }\n        }\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <Navbar />\n            {props.children}\n        </div>\n    );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Layout from './hocs/Layout';\n\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route exact path = '/' component={Home} />\n                    <Route exact path='/login' component={Login} />\n                    <Route exact path='/signup' component={Signup} />\n                    <Route exact path='/reset_password' component={ResetPassword} />\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}